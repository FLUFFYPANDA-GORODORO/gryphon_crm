import React, { useState, useEffect } from "react";
import {
  FiFilter,
  FiMoreVertical,
  FiUpload,
  FiX,
  FiFileText,
  FiEdit,
} from "react-icons/fi";
import PropTypes from "p                    <td className="px-6 py-4">
                      <div className="flex items-center space-x-2">
                        <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-cyan-400 to-blue-500 flex items-center justify-center shadow-sm">
                          <span className="text-xs font-bold text-white">ðŸ‘¥</span>
                        </div>
                        <div>
                          <div className="text-lg font-bold text-gray-900 group-hover:text-cyan-700 transition-colors">
                            {lead.numberOfStudents || "-"}
                          </div>
                          <div className="text-xs text-gray-500 font-medium">
                            Students
                          </div>
                        </div>
                      </div>
                    </td>port * as XLSX from "xlsx";
import { db } from "../../../firebase";
import {
  doc,
  getDoc,
} from "firebase/firestore";

// Project Code Conversion Utilities
const projectCodeToDocId = (projectCode) =>
  projectCode ? projectCode.replace(/\//g, "-") : "";
const displayProjectCode = (code) => (code ? code.replace(/-/g, "/") : "-");
const displayYear = (year) => year.replace(/-/g, " ");

const ClosedLeadsTable = ({
  leads,
  formatDate,
  formatCurrency,
  viewMyLeadsOnly,
  onEditModal,
  onViewDetails,
  onUploadModal,
  onMOUModal,
}) => {
  const [openDropdown, setOpenDropdown] = useState(null);

  // Update the useEffect for click outside handling
  useEffect(() => {
    const handleClickOutside = (event) => {
      // Only close if we're clicking outside ALL dropdowns
      if (!event.target.closest('[data-dropdown-container]')) {
        setOpenDropdown(null);
      }
    };

    // Add event listener
    document.addEventListener('mousedown', handleClickOutside);

    // Cleanup
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []); // Remove openDropdown dependency

  // Update the toggleDropdown function
  const toggleDropdown = (id, e) => {
    e.preventDefault();
    e.stopPropagation();
    setOpenDropdown(openDropdown === id ? null : id);
  };

  return (
    <div className="w-full">
      {/* Modern Table Container */}
      <div className="bg-white rounded-xl shadow-sm border border-gray-200/60 overflow-hidden">
        <div className="overflow-x-auto scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100">
          <table className="min-w-full divide-y divide-gray-50">
            <thead className="bg-gradient-to-r from-slate-50 to-gray-50/80 backdrop-blur-sm hidden md:table-header-group">
              <tr>
                <th className="px-6 py-4 text-left text-xs font-semibold text-slate-600 uppercase tracking-wider border-b border-gray-100/80">
                  <div className="flex items-center space-x-2">
                    <div className="w-1 h-4 bg-gradient-to-b from-blue-500 to-indigo-600 rounded-full"></div>
                    <span>Project Code</span>
                  </div>
                </th>
                <th className="px-6 py-4 text-left text-xs font-semibold text-slate-600 uppercase tracking-wider border-b border-gray-100/80 w-[200px]">
                  <div className="flex items-center space-x-2">
                    <div className="w-1 h-4 bg-gradient-to-b from-emerald-500 to-teal-600 rounded-full"></div>
                    <span>College Name</span>
                  </div>
                </th>
                <th className="px-6 py-4 text-left text-xs font-semibold text-slate-600 uppercase tracking-wider border-b border-gray-100/80">
                  <div className="flex items-center space-x-2">
                    <div className="w-1 h-4 bg-gradient-to-b from-cyan-500 to-blue-600 rounded-full"></div>
                    <span>No of stds.</span>
                  </div>
                </th>
                <th className="px-6 py-4 text-left text-xs font-semibold text-slate-600 uppercase tracking-wider border-b border-gray-100/80">
                  <div className="flex items-center space-x-2">
                    <div className="w-1 h-4 bg-gradient-to-b from-purple-500 to-violet-600 rounded-full"></div>
                    <span>Cost per std.</span>
                  </div>
                </th>
                <th className="px-6 py-4 text-left text-xs font-semibold text-slate-600 uppercase tracking-wider border-b border-gray-100/80">
                  <div className="flex items-center space-x-2">
                    <div className="w-1 h-4 bg-gradient-to-b from-rose-500 to-pink-600 rounded-full"></div>
                    <span>Actual TCV</span>
                  </div>
                </th>
                <th className="px-6 py-4 text-left text-xs font-semibold text-slate-600 uppercase tracking-wider border-b border-gray-100/80 w-[160px]">
                  <div className="flex items-center space-x-2">
                    <div className="w-1 h-4 bg-gradient-to-b from-indigo-500 to-purple-600 rounded-full"></div>
                    <span>Owner</span>
                  </div>
                </th>
                <th className="px-6 py-4 text-left text-xs font-semibold text-slate-600 uppercase tracking-wider border-b border-gray-100/80">
                  <div className="flex items-center space-x-2">
                    <div className="w-1 h-4 bg-gradient-to-b from-amber-500 to-orange-600 rounded-full"></div>
                    <span>Closed Date</span>
                  </div>
                </th>
                <th className="px-4 py-4 text-center text-xs font-semibold text-slate-600 uppercase tracking-wider border-b border-gray-100/80 w-[80px]">
                  <span className="sr-only">Actions</span>
                </th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-50">
              {leads.length > 0 ? (
                leads.map(([id, lead]) => (
                  <tr
                    key={id}
                    className="group hover:bg-gradient-to-r hover:from-slate-50/50 hover:to-gray-50/30 transition-all duration-200 cursor-pointer border-b border-gray-50/80"
                    onClick={async () => {
                      try {
                        const projectCode = lead.projectCode;
                        if (!projectCode) {
                          console.error("No project code found for this lead");
                          return;
                        }

                        const docId = projectCodeToDocId(projectCode);
                        const docRef = doc(db, "trainingForms", docId);
                        const docSnap = await getDoc(docRef);

                        if (docSnap.exists()) {
                          onViewDetails({ id: docSnap.id, ...docSnap.data() });
                        } else {
                          console.error("No training form found for this lead");
                          onViewDetails(lead);
                        }
                      } catch (error) {
                        console.error("Error fetching training form:", error);
                        onViewDetails(lead);
                      }
                    }}
                  >
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center space-x-3">
                        <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center shadow-sm">
                          <span className="text-xs font-bold text-white">
                            {displayProjectCode(lead.projectCode)?.charAt(0) || "?"}
                          </span>
                        </div>
                        <div>
                          <div className="text-sm font-semibold text-gray-900 group-hover:text-blue-700 transition-colors">
                            {displayProjectCode(lead.projectCode) || "-"}
                          </div>
                          <div className="text-xs text-gray-500">
                            {displayYear(String(lead.closedDate || ""))}
                          </div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center space-x-3">
                        <div className="relative">
                          <div className="w-10 h-10 rounded-xl bg-gradient-to-br from-emerald-400 to-teal-500 flex items-center justify-center shadow-md ring-2 ring-white">
                            <span className="text-sm font-bold text-white">
                              {lead.businessName?.charAt(0)?.toUpperCase() || "?"}
                            </span>
                          </div>
                          <div className="absolute -bottom-1 -right-1 w-4 h-4 rounded-full bg-gradient-to-br from-emerald-500 to-teal-600 border-2 border-white shadow-sm"></div>
                        </div>
                        <div className="min-w-0 flex-1">
                          <div className="text-sm font-semibold text-gray-900 group-hover:text-emerald-700 transition-colors truncate">
                            {lead.businessName || "-"}
                          </div>
                          <div className="flex items-center space-x-2 mt-1">
                            {lead.closureType === "new" ? (
                              <span className="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-gradient-to-r from-emerald-50 to-teal-50 text-emerald-700 border border-emerald-200/50 shadow-sm">
                                <div className="w-1.5 h-1.5 rounded-full bg-emerald-500 mr-1.5"></div>
                                New
                              </span>
                            ) : (
                              <span className="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-gradient-to-r from-blue-50 to-indigo-50 text-blue-700 border border-blue-200/50 shadow-sm">
                                <div className="w-1.5 h-1.5 rounded-full bg-blue-500 mr-1.5"></div>
                                Renewal
                              </span>
                            )}
                          </div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center space-x-2">
                        <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-amber-400 to-orange-500 flex items-center justify-center shadow-sm">
                          <span className="text-xs font-bold text-white">ï¿½</span>
                        </div>
                        <div>
                          <div className="text-sm font-medium text-gray-900 group-hover:text-amber-700 transition-colors">
                            {formatDate(lead.closedDate)}
                          </div>
                          <div className="text-xs text-gray-500">
                            Closed Deal
                          </div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center space-x-2">
                        <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-rose-400 to-pink-500 flex items-center justify-center shadow-sm">
                          <span className="text-xs font-bold text-white">ï¿½</span>
                        </div>
                        <div>
                          <div className="text-lg font-bold text-gray-900 group-hover:text-rose-700 transition-colors">
                            {formatCurrency(lead.totalCost)}
                          </div>
                          <div className="text-xs text-gray-500 font-medium">
                            Actual TCV
                          </div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center space-x-2">
                        <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-cyan-400 to-blue-500 flex items-center justify-center shadow-sm">
                          <span className="text-xs font-bold text-white">ï¿½</span>
                        </div>
                        <div>
                          <div className="text-lg font-bold text-gray-900 group-hover:text-cyan-700 transition-colors">
                            {lead.numberOfStudents || "-"}
                          </div>
                          <div className="text-xs text-gray-500 font-medium">
                            Students
                          </div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center space-x-2">
                        <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-purple-400 to-violet-500 flex items-center justify-center shadow-sm">
                          <span className="text-xs font-bold text-white">ï¿½</span>
                        </div>
                        <div>
                          <div className="text-lg font-bold text-gray-900 group-hover:text-purple-700 transition-colors">
                            {lead.costPerStudent ? formatCurrency(lead.costPerStudent) : "-"}
                          </div>
                          <div className="text-xs text-gray-500 font-medium">
                            Per Student
                          </div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center space-x-3">
                        <div className="relative">
                          <div className="w-9 h-9 rounded-xl bg-gradient-to-br from-indigo-400 to-purple-500 flex items-center justify-center shadow-md ring-2 ring-white">
                            <span className="text-sm font-bold text-white">
                              {lead.assignedTo?.name
                                ?.split(" ")
                                .map((n) => n[0])
                                .join("")
                                .toUpperCase() || "?"}
                            </span>
                          </div>
                          <div className="absolute -bottom-1 -right-1 w-3 h-3 rounded-full bg-gradient-to-br from-green-400 to-emerald-500 border-2 border-white shadow-sm"></div>
                        </div>
                        <div className="min-w-0 flex-1">
                          <div className="text-sm font-semibold text-gray-900 group-hover:text-indigo-700 transition-colors truncate">
                            {lead.assignedTo?.name || "-"}
                          </div>
                          <div className="text-xs text-gray-500">
                            Deal Owner
                          </div>
                        </div>
                      </div>
                    </td>
                    <td className="px-4 py-4 text-center">
                      <div
                        className="flex justify-center items-center h-full relative"
                        data-dropdown-container
                      >
                        <button
                          onClick={(e) => toggleDropdown(id, e)}
                          aria-label="Action menu"
                          aria-expanded={openDropdown === id}
                          className={`group relative w-8 h-8 rounded-xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${
                            openDropdown === id
                              ? "bg-gradient-to-br from-blue-500 to-indigo-600 text-white shadow-lg scale-105"
                              : "bg-gray-50 text-gray-600 hover:bg-gradient-to-br hover:from-gray-100 hover:to-gray-200 hover:text-gray-900 hover:shadow-md"
                          }`}
                        >
                          <div className="absolute inset-0 rounded-xl bg-gradient-to-br from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity"></div>
                          {openDropdown === id ? (
                            <FiX className="h-4 w-4 relative z-10" aria-hidden="true" />
                          ) : (
                            <FiMoreVertical className="h-4 w-4 relative z-10" aria-hidden="true" />
                          )}
                        </button>

                        {/* Modern Dropdown Menu */}
                        {openDropdown === id && (
                          <div
                            className="absolute right-0 top-full z-50 mt-2 w-56 origin-top-right rounded-2xl bg-white shadow-2xl ring-1 ring-gray-200/50 focus:outline-none backdrop-blur-sm"
                            data-dropdown-container
                            onClick={(e) => e.stopPropagation()}
                            style={{
                              boxShadow: "0px 20px 40px -10px rgba(0, 0, 0, 0.15), 0px 8px 16px -4px rgba(0, 0, 0, 0.1)",
                            }}
                          >
                            <div className="p-2 space-y-1">
                              <button
                                className="group w-full flex items-center rounded-xl px-4 py-3 text-sm font-medium text-gray-700 transition-all duration-200 hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 hover:text-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                                onClick={(e) => {
                                  e.stopPropagation();
                                  onUploadModal(lead);
                                  setOpenDropdown(null);
                                }}
                              >
                                <div className="flex items-center justify-center w-8 h-8 rounded-lg bg-gradient-to-br from-blue-100 to-indigo-100 mr-3 group-hover:from-blue-200 group-hover:to-indigo-200 transition-colors">
                                  <FiUpload className="h-4 w-4 text-blue-600" />
                                </div>
                                <span className="font-medium">Upload Student List</span>
                              </button>

                              <button
                                className="group w-full flex items-center rounded-xl px-4 py-3 text-sm font-medium text-gray-700 transition-all duration-200 hover:bg-gradient-to-r hover:from-emerald-50 hover:to-teal-50 hover:text-emerald-700 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:ring-offset-2"
                                onClick={(e) => {
                                  e.stopPropagation();
                                  onMOUModal(id);
                                  setOpenDropdown(null);
                                }}
                              >
                                <div className="flex items-center justify-center w-8 h-8 rounded-lg bg-gradient-to-br from-emerald-100 to-teal-100 mr-3 group-hover:from-emerald-200 group-hover:to-teal-200 transition-colors">
                                  <FiFileText className="h-4 w-4 text-emerald-600" />
                                </div>
                                <span className="font-medium">
                                  {lead.mouFileUrl ? "Update MOU" : "Upload MOU"}
                                </span>
                                {lead.mouFileUrl && (
                                  <div className="ml-auto flex items-center">
                                    <div className="w-2 h-2 rounded-full bg-gradient-to-br from-emerald-400 to-teal-500 shadow-sm"></div>
                                  </div>
                                )}
                              </button>

                              <button
                                className="group w-full flex items-center rounded-xl px-4 py-3 text-sm font-medium text-gray-700 transition-all duration-200 hover:bg-gradient-to-r hover:from-amber-50 hover:to-orange-50 hover:text-amber-700 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2"
                                onClick={(e) => {
                                  e.stopPropagation();
                                  onEditModal(lead);
                                  setOpenDropdown(null);
                                }}
                              >
                                <div className="flex items-center justify-center w-8 h-8 rounded-lg bg-gradient-to-br from-amber-100 to-orange-100 mr-3 group-hover:from-amber-200 group-hover:to-orange-200 transition-colors">
                                  <FiEdit className="h-4 w-4 text-amber-600" />
                                </div>
                                <span className="font-medium">Edit Details</span>
                              </button>
                            </div>
                          </div>
                        )}
                      </div>
                    </td>
                  </tr>
                ))
              ) : (
                <tr>
                  <td colSpan="7" className="py-16 text-center">
                    <div className="flex flex-col items-center justify-center space-y-4">
                      <div className="relative">
                        <div className="w-20 h-20 rounded-2xl bg-gradient-to-br from-slate-100 to-gray-200 flex items-center justify-center shadow-lg">
                          <FiFilter className="h-10 w-10 text-slate-400" />
                        </div>
                        <div className="absolute -top-2 -right-2 w-6 h-6 rounded-full bg-gradient-to-br from-blue-400 to-indigo-500 flex items-center justify-center shadow-md">
                          <span className="text-xs font-bold text-white">?</span>
                        </div>
                      </div>
                      <div className="text-center">
                        <h3 className="text-lg font-semibold text-gray-900 mb-2">
                          No closed deals found
                        </h3>
                        <p className="text-sm text-gray-500 max-w-md">
                          {`There are currently no ${viewMyLeadsOnly ? "your" : "team"} closed deals. New deals will appear here once they're marked as closed.`}
                        </p>
                      </div>
                      <div className="flex items-center space-x-2 text-xs text-gray-400 bg-gray-50 px-3 py-2 rounded-full">
                        <div className="w-2 h-2 rounded-full bg-gradient-to-r from-blue-400 to-indigo-500"></div>
                        <span>Check back later or create your first deal</span>
                      </div>
                    </div>
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};

ClosedLeadsTable.propTypes = {
  leads: PropTypes.array.isRequired,
  formatDate: PropTypes.func.isRequired,
  formatCurrency: PropTypes.func.isRequired,
  viewMyLeadsOnly: PropTypes.bool.isRequired,
  onEditModal: PropTypes.func.isRequired,
  onViewDetails: PropTypes.func.isRequired,
  onUploadModal: PropTypes.func.isRequired,
  onMOUModal: PropTypes.func.isRequired,
};

export default ClosedLeadsTable;